library(ncdf4)
library(chron)
library(lattice)
library(RColorBrewer)
library(zoo)
library(animation)
ncin<-nc_open("cru_ts4.07.1901.2022.tmp.dat.nc")
ncin<-nc_open("cru_ts4.07.1901.2022.tmp.dat.nc")
lon <- ncvar_get(ncin,"lon")
lon
nlon <- dim(lon)
lat <- ncvar_get(ncin,"lat")
nlat <- dim(lat)
time <- ncvar_get(ncin,"time")
nt <-dim(time)
tunits <- ncatt_get(ncin,"time","units")
tustr <- strsplit(tunits$value, " ")
tdstr <- strsplit(unlist(tustr)[3], "-")
tmonth <- as.integer(unlist(tdstr)[2])
tday <- as.integer(unlist(tdstr)[3])
tyear <- as.integer(unlist(tdstr)[1])
time_ch<-chron(time,origin=c(tmonth, tday, tyear))
time_m_y<-as.yearmon(time_ch)
Sys.setlocale("LC_TIME", "C")
time_m_y<-as.yearmon(time_ch)
time_m_y
m <- 6
tmp_slice <- ncvar_get(ncin,"tmp",start=c(1,1,m),count=c(nlon,nlat,1))
range(na.omit(as.numeric(tmp_slice)))
image(lon,lat,tmp_slice, col=rev(brewer.pal(10,"RdBu")), xlim=c(-180,180),ylim=c(-90,90),zlim=c(-17,39))
text(-150,-70,time_m_y[m])
m<-12
tmp_slice <- ncvar_get(ncin,"tmp",start=c(1,1,m),count=c(nlon,nlat,1))
image(lon,lat,tmp_slice, col=rev(brewer.pal(10,"RdBu")), xlim=c(-180,180),ylim=c(-90,90),zlim=c(-17,39))
text(-150,-70,time_m_y[m])
range(na.omit(as.numeric(tmp_slice)))
image(lon,lat,tmp_slice, col=rev(brewer.pal(10,"RdBu")), xlim=c(-180,180),ylim=c(-90,90),zlim=c(-45,34))
text(-150,-70,time_m_y[m])
grid <- expand.grid(lon=lon, lat=lat)
head(grid)
cutpts <- c(-50,-40,-30,-20,-10,0,10,20,30,40,50)
levelplot(tmp_slice ~ lon * lat, data=grid, at=cutpts, cuts=11, pretty=T, col.regions=(rev(brewer.pal(10,"RdBu"))),aspect=0.5, main=as.character(time_m_y[m]))
slice_m<-seq(1,length(time_m_y),12) #kolejne argumenty: od/do/co ile
slice_m
min<-0
max<-0
for (m in slice_m){
tmp_slice <- ncvar_get(ncin,"tmp",start=c(1,1,m),count=c(nlon,nlat,1))
range<-range(na.omit(as.numeric(tmp_slice)))
if (min>range[1]) min<-range[1]
if (max<range[2]) max<-range[2]
}
min
max
dev.off()
saveGIF({
for (m in slice_m){
### tmp_slice <- tmp_array[,,m]
tmp_slice <- ncvar_get(ncin,"tmp",start=c(1,1,m),count=c(nlon,nlat,1))
par(pin=c(5,2.5))
image(lon,lat,tmp_slice, col=rev(brewer.pal(10,"RdBu")),xlim=c(-180,180),ylim=c(-90,90),zlim=c(min,max))
text(-150,-70,time_m_y[m])
}
},interval=0.2)
site_tmp<-ncvar_get(ncin,"tmp",start=c(401,281,1),count=c(1,1,1464))
plot(time_m_y, site_tmp,t="l")
plot(time_m_y,site_tmp,t="l", xlim=c(1901,1920))
slice_m<-seq(6,length(time_m_y),12) #wybieram pozycje czerwcow
plot(time_m_y[slice_m],site_tmp[slice_m],t="b") #troche inny niz poprzednio styl wykresu (t="b")
abline(a=mean(site_tmp[slice_m]),b=0,col="Red",lwd=2)
which(lat==51.25)
which(lon==21.25)
radom_tmp<-ncvar_get(ncin,"tmp",start=c(403,283,1),count=c(1,1,1464))
radom_tmp
round(radom_tmp, 1)
slice_m<-seq(6,length(time_m_y),12)
plot(time_m_y[slice_m],radom_tmp[slice_m],t="b")
abline(a=mean(radom_tmp[slice_m]),b=0,col="Red",lwd=2)
abline(lm(radom_tmp[slice_m]~time_m_y[slice_m]), col="Green", lwd=2)
g1<-slice_m[61:90]
g2<-slice_m[91:120]
range(na.omit(as.numeric(radom_tmp[slice_m])))
plot(time_m_y[g1],radom_tmp[g1],t="b",ylim=c(13,21),axes=FALSE)
lines(time_m_y[g1],radom_tmp[g2],t="b",col="Red")
axis(1,labels=FALSE)
axis(2)
plot(time_m_y[g1],radom_tmp[g1],t="b",xlim=c(1961,2020))
range(na.omit(as.numeric(radom_tmp[slice_m])))
plot(time_m_y[g1],radom_tmp[g1],t="b",ylim=c(13,21),axes=FALSE)
lines(time_m_y[g1],radom_tmp[g2],t="b",col="Red")
axis(1,labels=FALSE)
axis(2)
plot(time_m_y[g1],radom_tmp[g1],t="b",xlim=c(1961,2020))
lines(time_m_y[g2],radom_tmp[g2],t="b",col="Red")
df1<-data.frame(x=time_m_y[g1],y=radom_tmp[g1])
df1
df2<-data.frame(x=time_m_y[g2],y=radom_tmp[g2])
df2
m1<-lm(y~x,data=df1)
m2<-lm(y~x,data=df2)
lines(time_m_y[g1],predict(m1))
lines(time_m_y[g2],predict(m2),col="Red")
summary(m1)
lines(time_m_y[g2],predict(m1,newdata=df2),col="Blue") #parametrem newdata okreslamy lata dla ktorych chcemy wykonac predykcje
summary(m2)
library(ncdf4)
library(chron)
library(lattice)
library(RColorBrewer)
library(zoo)
library(animation)
ncin<-nc_open("cru_ts4.07.1901.2022.tmp.dat.nc")
lon <- ncvar_get(ncin,"lon")
nlon <- dim(lon)
lat <- ncvar_get(ncin,"lat")
nlat <- dim(lat)
time <- ncvar_get(ncin,"time")
nt <-dim(time)
tunits <- ncatt_get(ncin,"time","units")
tustr <- strsplit(tunits$value, " ")
tdstr <- strsplit(unlist(tustr)[3], "-")
tmonth <- as.integer(unlist(tdstr)[2])
tday <- as.integer(unlist(tdstr)[3])
tyear <- as.integer(unlist(tdstr)[1])
time_ch<-chron(time,origin=c(tmonth, tday, tyear))
time_m_y<-as.yearmon(time_ch)
Sys.setlocale("LC_TIME", "C")
time_m_y<-as.yearmon(time_ch)
time_m_y
m <- 6
tmp_slice <- ncvar_get(ncin,"tmp",start=c(1,1,m),count=c(nlon,nlat,1))
range(na.omit(as.numeric(tmp_slice)))
image(lon,lat,tmp_slice, col=rev(brewer.pal(10,"RdBu")), xlim=c(-180,180),ylim=c(-90,90),zlim=c(-17,39))
text(-150,-70,time_m_y[m])
library(ncdf4)
library(chron)
library(lattice)
library(RColorBrewer)
library(zoo)
library(animation)
ncin<-nc_open("cru_ts4.07.1901.2022.tmp.dat.nc")
site_tmp<-ncvar_get(ncin,"tmp",start=c(401,281,1),count=c(1,1,1464))
plot(time_m_y, site_tmp,t="l")
which(lat==50.25)
which(lon==22.25)
rzeszow_tmp <- ncvar_get(ncin,"tmp",start=c(405,281,1),count=c(1,1,1464))
rzeszow_tmp
round(rzeszow_tmp, 1)
slice_m <- seq(6,length(time_m_y),12)
tunits <- ncatt_get(ncin,"time","units")
tustr <- strsplit(tunits$value, " ")
tdstr <- strsplit(unlist(tustr)[3], "-")
tmonth <- as.integer(unlist(tdstr)[2])
tday <- as.integer(unlist(tdstr)[3])
tyear <- as.integer(unlist(tdstr)[1])
time_ch<-chron(time,origin=c(tmonth, tday, tyear))
time_m_y<-as.yearmon(time_ch)
Sys.setlocale("LC_TIME", "C")
time_m_y<-as.yearmon(time_ch)
time_m_y
slice_m <- seq(7,length(time_m_y),12)
plot(time_m_y[slice_m],radom_tmp[slice_m],t="b")
plot(time_m_y[slice_m],rzeszow_tmp[slice_m],t="b")
abline(a=mean(rzeszow_tmp[slice_m]),b=0,col="Red",lwd=2)
abline(lm(rzeszow_tmp[slice_m]~time_m_y[slice_m]), col="Green", lwd=2)
g1<-slice_m[61:90]
g2<-slice_m[91:120]
range(na.omit(as.numeric(rzeszow_tmp[slice_m])))
plot(time_m_y[g1],radom_tmp[g1],t="b",ylim=c(13,21),axes=FALSE)
range(na.omit(as.numeric(rzeszow_tmp[slice_m])))
lines(time_m_y[g1],rzeszow_tmp[g2],t="b",col="Red")
axis(1,labels=FALSE)
axis(2)
range(na.omit(as.numeric(rzeszow_tmp[slice_m])))
plot(time_m_y[g1],radom_tmp[g1],t="b",ylim=c(15,25),axes=FALSE)
lines(time_m_y[g1],rzeszow_tmp[g2],t="b",col="Red")
axis(1,labels=FALSE)
axis(2)
range(na.omit(as.numeric(rzeszow_tmp[slice_m])))
plot(time_m_y[g1],radom_tmp[g1],t="b",ylim=c(15,22),axes=FALSE)
# Dodaje druga serie danych
lines(time_m_y[g1],rzeszow_tmp[g2],t="b",col="Red")
axis(1,labels=FALSE)
axis(2)
# Porownanie dwoch okresow (jeden na drugim)
range(na.omit(as.numeric(rzeszow_tmp[slice_m])))
plot(time_m_y[g1],radom_tmp[g1],t="b",ylim=c(15,23),axes=FALSE)
# Dodaje druga serie danych
lines(time_m_y[g1],rzeszow_tmp[g2],t="b",col="Red")
axis(1,labels=FALSE)
axis(2)
plot(time_m_y[g1],rzeszow_tmp[g1],t="b",xlim=c(1961,2020))
lines(time_m_y[g2],rzeszow_tmp[g2],t="b",col="Red")
plot(time_m_y[g1],rzeszow_tmp[g1],t="b",xlim=c(1961,2020),,ylim=c(15,23))
lines(time_m_y[g2],rzeszow_tmp[g2],t="b",col="Red")
# Umieszczam na nowym wykresie dane z poprzedniego, zachowujac odpowiednie polozenie czasowe
plot(time_m_y[g1],rzeszow_tmp[g1],t="b",xlim=c(1961,2020),ylim=c(15,23))
lines(time_m_y[g2],rzeszow_tmp[g2],t="b",col="Red")
df1<-data.frame(x=time_m_y[g1],y=radom_tmp[g1])
df1
df2<-data.frame(x=time_m_y[g2],y=radom_tmp[g2])
df2
m1<-lm(y~x,data=df1)
m2<-lm(y~x,data=df2)
df1<-data.frame(x=time_m_y[g1],y=rzeszow_tmp[g1])
df1
df2<-data.frame(x=time_m_y[g2],y=rzeszow_tmp[g2])
df2
m1<-lm(y~x,data=df1)
m2<-lm(y~x,data=df2)
lines(time_m_y[g1],predict(m1))
lines(time_m_y[g2],predict(m2),col="Red")
summary(m1)
lines(time_m_y[g2],predict(m1,newdata=df2),col="Blue")
